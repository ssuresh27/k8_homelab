users:
  - default
  - name: ubuntu
    sudo: ALL=(ALL) NOPASSWD:ALL
    ssh_authorized_keys:
    - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDO2H4g/GJSQ9J3omcGTyLU3NS7jeyspEgetynOnmEFpqiUBvmrC26Sdo4uAQKqp4eGg9DE9yE7JKc/PxzVqKcKFj6EEyS37/A2UfgNsDKDElICHUi0GiTujkYvdQcU3cnpS3Yep0KVyAjAiRFESHpWhz9OtGTGIslR23WDFDd/2nIQBRxK3hucLUQIvIsl0MbGqU4R9Hbvhi5HgY9/ht42qIcb9dIq41O2/92K44mFgiJH/IjZanMJTMVdHVr27XGvVlbkuuzt+H7ZYRNhn6pjhClw8ipoy++28Hu170O5qHL/ybUNMgxVQBAiVmQNWB9WHU/c2VBO3vD+6m3t9/wY3+Bdq4LZ2InQl+VPPc95vCmYIIOuvRbdYjQ9XrEDsnzr9J0fo7TQ1JUxXPMs33SFp918BQh4agYl2oq9YpxQL/pJXBgjEa4BlhRXKZAt1GLQgPEqRQBPR5hOXR+/Z3u6yROdflE3QdJWTpbsdjBaC/4p90pdIFBrirmPT3q0eR0= ubuntu

packages:
  - openssl
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg
  - lsb-release
  - net-tools
  - nfs-common
  - socat
  - gpg

write_files:
# should ensure net.bridge.bridge-nf-call-iptables is set to 1 in your sysctl config
- content: |
    br_netfilter
    overlay
  path: /etc/modules-load.d/k8s.conf
- content: |
    net.bridge.bridge-nf-call-ip6tables = 1
    net.bridge.bridge-nf-call-iptables = 1
    net.ipv4.ip_forward = 1
  path: /etc/sysctl.d/k8s.conf

bootcmd:
  - echo 127.0.0.1 localhost >> /etc/hosts
  - echo 169.254.124.111 conrol01 >> /etc/hosts
  - echo 169.254.124.112 conrol02 >> /etc/hosts
  - echo 169.254.124.201 worker01 >> /etc/hosts
  - echo 169.254.124.202 worker02 >> /etc/hosts
  - echo 169.254.124.203 worker03 >> /etc/hosts
  - echo 169.254.124.204 worker04 >> /etc/hosts
  - echo 169.254.124.205 worker05 >> /etc/hosts
  - echo 169.254.124.199 nfsserver >> /etc/hosts

runcmd:
  - sudo sysctl --system
  - sudo  sysctl net.bridge.bridge-nf-call-iptables net.bridge.bridge-nf-call-ip6tables net.ipv4.ip_forward

  # Install containerd
  - curl -LO https://github.com/containerd/containerd/releases/download/v1.7.22/containerd-1.7.22-linux-amd64.tar.gz
  - sudo tar Cxzvf /usr/local containerd-1.7.22-linux-amd64.tar.gz
  - curl -LO https://raw.githubusercontent.com/containerd/containerd/main/containerd.service
  - sudo mkdir -p /usr/local/lib/systemd/system/
  - sudo mv containerd.service /usr/local/lib/systemd/system/
  - sudo mkdir -p /etc/containerd/
  - sudo containerd config default | sudo tee /etc/containerd/config.toml > /dev/null
  - sudo sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml
  - sudo systemctl daemon-reload
  - sudo systemctl enable --now containerd

  # Install RUNC
  - curl -LO https://github.com/opencontainers/runc/releases/download/v1.1.14/runc.amd64
  - sudo install -m 755 runc.amd64 /usr/local/sbin/runc
  
  # Install CNI
  - curl -LO https://github.com/containernetworking/plugins/releases/download/v1.5.1/cni-plugins-linux-amd64-v1.5.1.tgz
  - sudo mkdir -p /opt/cni/bin
  - sudo tar Cxzf /opt/cni/bin cni-plugins-linux-amd64-v1.5.1.tgz

  # Install Kubeadm
  - sudo apt-get update
  - curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  - echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
  - sudo apt-get update
  - sudo apt-get install -y kubelet kubeadm kubectl
  - sudo apt-mark hold kubelet kubeadm kubectl
  #Install CRICRL
  - sudo crictl config runtime-endpoint unix:///var/run/containerd/containerd.sock